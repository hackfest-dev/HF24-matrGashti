// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String
  password  String
  latitude  String?
  longitude String?
  role      String
  menus     Menu[] // Changed `Menu` to `Menu[]`
  ratings   Rating[]
  review    Review[] // Changed `review` to `review[]`
  orders    Order[] // Changed `order` to `orders[]`
}

model Menu {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  items       MenuItem[]
  description String
  foodBy      User       @relation(fields: [userId], references: [id])
  userId      String     @db.ObjectId
  isAvailable Boolean    @default(true)
  ratings     Rating[]
  Order       Order[]
  Review      Review[]
}

model MenuItem {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  quantity String
  Menu     Menu?   @relation(fields: [menuId], references: [id])
  menuId   String? @db.ObjectId
}

model OrderItem {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  quantity String
  Order    Order?  @relation(fields: [orderId], references: [id])
  orderId  String? @db.ObjectId
}

model Rating {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  rating  Float
  comment String?
  menu    Menu    @relation(fields: [menuId], references: [id])
  menuId  String  @db.ObjectId
  user    User    @relation(fields: [userId], references: [id])
  userId  String
}

model Order {
  id      String      @id @default(auto()) @map("_id") @db.ObjectId
  status  String
  address String
  order   OrderItem[]
  user    User        @relation(fields: [userId], references: [id])
  userId  String
  menu    Menu        @relation(fields: [menuId], references: [id])
  menuId  String
}

model Review {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  rating  Int
  comment String?
  user    User    @relation(fields: [userId], references: [id])
  userId  String
  menu    Menu    @relation(fields: [menuId], references: [id])
  menuId  String
}
